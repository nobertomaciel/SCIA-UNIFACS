Função BuscaGulosaGrafo(grafo, inicio, objetivo, heuristica):

    criar uma fila de prioridade chamada fronteira
    inserir (inicio, [inicio]) na fronteira com prioridade heuristica[inicio]

    criar um conjunto chamado visitados

    enquanto fronteira não estiver vazia:
        (nó_atual, caminho) ← remover da fronteira o elemento com menor heuristica

        se nó_atual = objetivo:
            retornar caminho

        adicionar nó_atual em visitados

        para cada vizinho em grafo[nó_atual]:
            se vizinho não estiver em visitados:
                novo_caminho ← caminho + [vizinho]
                inserir (vizinho, novo_caminho) na fronteira com prioridade heuristica[vizinho]

    retornar "Caminho não encontrado"


grafo = {
    'A': ['B', 'C'],
    'B': ['D'],
    'C': ['D', 'E'],
    'D': ['F'],
    'E': ['F'],
    'F': []
}

heuristica = {
    'A': 6,
    'B': 5,
    'C': 4,
    'D': 3,
    'E': 2,
    'F': 0
}

